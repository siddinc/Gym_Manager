package gui;

import database.DataHandler;
import database.models.Customer;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.util.List;

public class DBoard {
    private JPanel contentPanel;
    private JPanel menuPanel;
    private JButton removeButton;
    private JButton paymentButton;
    private JButton editButton;
    private JButton addButton;
    private JTable customersTable;
    private JPanel bannerPanel;
    private JPanel blackPanel;
    private JButton notificationsButton;
    private JScrollPane tableScrollPane;

    public DBoard () {
        $$$setupUI$$$ ();
        setData ();
        customersTable.setOpaque (false);

        addButton.setIcon (new ImageIcon ("resources/icons/add.png"));
        removeButton.setIcon (new ImageIcon ("resources/icons/delete.png"));
        editButton.setIcon (new ImageIcon ("resources/icons/edit.png"));
        paymentButton.setIcon (new ImageIcon ("resources/icons/package.png"));
        notificationsButton.setIcon (new ImageIcon ("resources/icons/notifications.png"));

        addButton.addActionListener (e -> {
            CustomerEditor addCustomerDialog = new CustomerEditor ();
            addCustomerDialog.setSize (400, 600);
            addCustomerDialog.setVisible (true);
            addCustomerDialog.addWindowListener (new WindowAdapter () {
                @Override
                public void windowClosed (WindowEvent ent) {
                    setData ();
                }
            });
        });

        paymentButton.addActionListener (event -> {
            // Get the customer selected in table.
            int selectedRow = customersTable.getSelectedRow ();
            if (selectedRow == -1) return; // no selections.

            // Get ID.
            String id = (String) customersTable.getModel ().getValueAt (selectedRow, 0);
            Customer customer = null;
            try (DataHandler dh = new DataHandler ()) {
                customer = dh.getById (id);
            } catch (IOException | SQLException e) {
                e.printStackTrace ();
            }

            CustomerUpdater updateCustomerDialog = new CustomerUpdater (customer);
            updateCustomerDialog.setSize (600, 300);
            updateCustomerDialog.setVisible (true);
            updateCustomerDialog.addWindowListener (new WindowAdapter () {
                @Override
                public void windowClosed (WindowEvent ent) {
                    setData ();
                }
            });
        });
    }

    public void setData () {
        try (DataHandler dh = new DataHandler ()) {
            // Get list from database.
            List<Customer> customerList = dh.getList ();

            // Get customers table model.
            DefaultTableModel customersModel = new DefaultTableModel () {
                @Override
                public boolean isCellEditable (int row, int column) {
                    return false;
                }
            };
            // Clear table.
            customersModel.setRowCount (0);
            // Set column headers.
            customersModel.setColumnIdentifiers (new String[] {
                    "ID",
                    "First Name",
                    "Last Name",
                    "Gender",
                    "Age",
                    "Height",
                    "Weight",
                    "BMI",
                    "Joining Date",
                    "Membership End Date"
            });
            // Add data.
            customerList.stream ().forEach (e -> customersModel.addRow (e.toVector ()));

            customersTable.setModel (customersModel);
        } catch (SQLException e) { // TODO: Handle differently.
            e.printStackTrace ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }

    private void createUIComponents () {
        bannerPanel = new ImagePanel ("resources/images/logo.png");
//        tableScrollPane = new ImageScrollPane ("resources/images/logo.png");
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$ () {
        createUIComponents ();
        contentPanel = new JPanel ();
        contentPanel.setLayout (new GridBagLayout ());
        contentPanel.setBackground (new Color (-51891));
        tableScrollPane = new JScrollPane ();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints ();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.weightx = 10.0;
        gbc.weighty = 20.0;
        gbc.fill = GridBagConstraints.BOTH;
        contentPanel.add (tableScrollPane, gbc);
        customersTable = new JTable ();
        customersTable.setBackground (new Color (-333825));
        customersTable.setOpaque (false);
        customersTable.setSelectionForeground (new Color (-11916758));
        tableScrollPane.setViewportView (customersTable);
        menuPanel = new JPanel ();
        menuPanel.setLayout (new GridBagLayout ());
        menuPanel.setBackground (new Color (-51891));
        gbc = new GridBagConstraints ();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.weightx = 10.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        contentPanel.add (menuPanel, gbc);
        removeButton = new JButton ();
        removeButton.setText ("Remove Customer");
        gbc = new GridBagConstraints ();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets (8, 8, 8, 8);
        menuPanel.add (removeButton, gbc);
        paymentButton = new JButton ();
        paymentButton.setText ("Add Package");
        gbc = new GridBagConstraints ();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets (8, 8, 8, 8);
        menuPanel.add (paymentButton, gbc);
        editButton = new JButton ();
        editButton.setText ("Edit Package");
        gbc = new GridBagConstraints ();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets (8, 8, 8, 8);
        menuPanel.add (editButton, gbc);
        addButton = new JButton ();
        addButton.setHorizontalAlignment (0);
        addButton.setText ("Add Customer");
        gbc = new GridBagConstraints ();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets (8, 8, 8, 8);
        menuPanel.add (addButton, gbc);
        notificationsButton = new JButton ();
        notificationsButton.setText ("Notifications");
        gbc = new GridBagConstraints ();
        gbc.gridx = 4;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        menuPanel.add (notificationsButton, gbc);
        blackPanel = new JPanel ();
        blackPanel.setLayout (new GridBagLayout ());
        blackPanel.setBackground (new Color (-16777216));
        gbc = new GridBagConstraints ();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.weightx = 10.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        contentPanel.add (blackPanel, gbc);
        bannerPanel.setAlignmentY (0.0f);
        bannerPanel.setBackground (new Color (-16777216));
        gbc = new GridBagConstraints ();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 10.0;
        gbc.weighty = 1.0;
        blackPanel.add (bannerPanel, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$ () {
        return contentPanel;
    }
}
